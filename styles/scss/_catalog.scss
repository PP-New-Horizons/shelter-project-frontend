@use "variables" as *;

@use "mixins" as *;

@use "base" as *;

@use "breadcrumb" as *;

.catalog {
    &__container {
        border-bottom: 2px solid map-get($colors, "primary");
    }
    &__title-container {
        background-color: map-get($colors, "tertiary");
        @include flex(column, center, center);
        padding-bottom: 0;
        padding-top: 2.5rem;
        gap: 2rem;
        & .breadcrumb {
            align-self: flex-start;
            margin-left: 6.25rem;
            & ul {
                & li {
                color: map-get($colors, "primary");

                & a {
                    color: map-get($colors, "primary");
                }
            }
        }
    }
    & h2 {
        color: map-get($colors, "primary" );
    }
  }
  &__title-img {
    @include flex(row, center, center);
        & .img-left, .img-right {
            margin-bottom: -2.5rem;
        }
        & .img-left {
            margin-right: -3.125rem;
        }
        & .img-right {
            margin-left: -3.125rem;
        }
        
  }
  &__wrapper {
    display: grid;
    grid-template-columns: 1fr 2fr;
  }
  &__filters {
    grid-column: 1 / 2;
  }
  &__card-group {
    grid-column: 2 / 3;
  }
  &__card {
    @include card(
        map-get($colors, "primary"),
        770px,
        2.1875rem,
        row,
        space-between,
        center
    );
    max-height: 11.875rem;
    overflow: hidden;
    &:hover {
      box-shadow: 0px 4px 20px 0px rgba(255, 132, 61, 1);
    }
    & img {
        height: 100%;
        width: 48%;
        border-radius: 2.8125rem;
        object-fit: cover;
        object-position: center;
    }
  }
  &__text {
    /*@include flex(column, center, flex-start);*/
    width: 48%;
    padding-right: 2.1875rem;
  }
  &__name {
    @include flex(row, space-between, center);
  }
  &__gender {
    @include flex(row, flex-start, center);
    gap: 0.3125rem;
    margin-bottom: 1rem;
  }
  &__description {
    font-size: map-get($font-sizes, "medium" );
  }

  &__pagination {
      @include flex(row, center, center);
      gap: 3.125rem;
      margin-top: 3.125rem;
  
      & button {
        border: none;
        background-color: transparent;
        cursor: pointer;
  
        &:hover svg {
  
          path,
          circle {
            stroke: map-get($colors, "primary");
            transition: stroke 0.3s;
          }
        }
  
        &:disabled {
          cursor: default;
  
          svg {
  
            path,
            circle {
              stroke: map-get($colors, "form-primary");
            }
          }
        }
      }
    }
  
  &__links {
      width: 20%;
      @include flex(row, space-between, center);
    }
  
  &__page-number:not(.active) {
      color: map-get($colors, "form-secondary");
    }
  
  &__ellipsis {
      color: map-get($colors, "form-secondary");
    }
  
  &__filters-container {
      display: inline-block;
      & ul {
        margin-bottom: 1.25rem;
      }
    }
  &__filter-name {
      position: relative;
      cursor: pointer;
      display: inline-block;
      font-weight: map-get($font-weights, "bold" );
      font-size: map-get($font-sizes, "medium" );
      color: map-get($colors, "primary" );
      @include flex(row, space-between, center);
      gap: 3.375rem;
      &.active {
          color: map-get($colors, "primary");      
          &::after {
            transform: rotate(90deg);
          }
          
        }      
      &::after {
          content: url(/shelter-project-frontend/assets/images/cat-catalog/catalog-filter-hevron.svg);
          transition: transform 0.2s ease;
        }
  }  
 &__filter-options {
   li {
     display: none; 
     padding: 0.2rem;
     color: map-get($colors, "primary" );

     & input[type="checkbox"] {
       appearance: none;
       width: 1rem;
       height: 1rem;
       border: 1px solid map-get($colors, "primary");
       position: relative;
       cursor: pointer;
       margin-right: 0.5rem;

       &::before {
         content: "";
         display: block;
         width: 100%;
         height: 100%;
         background-color: transparent;
       }

       &:checked::before {
         background-color: map-get($colors, "primary");
       }

       &:checked::after {
         content: "";
         position: absolute;
         top: 0.25rem;
         left: 0.25rem;
         width: 0.5rem;
         height: 0.5rem;
         clip-path: polygon(14% 44%, 0% 0%, 45% 58%, 100% 0%, 100% 18%, 47% 100%);
         background-color: map-get($colors, "base");
       }
     }
   }

   &.visible li {
     display: block;
   }
 }
  &__filter-options.visible {
      & li {
        display: block;
      }     
    }
}
